//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input Setting/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""58374bd7-c9b4-460c-b9fb-3d9f3aa739fb"",
            ""actions"": [
                {
                    ""name"": ""Mouse Vector"",
                    ""type"": ""Value"",
                    ""id"": ""1fe0326f-5b3f-46d0-ac34-91432b992818"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move Vector"",
                    ""type"": ""Value"",
                    ""id"": ""f9e2941d-56a7-4f36-991d-2b98b82dd64b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run Button"",
                    ""type"": ""Button"",
                    ""id"": ""8905d949-fb9b-45d9-aec5-7561cf48e1e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Guard Button"",
                    ""type"": ""Button"",
                    ""id"": ""c22208f4-28b3-4fae-87f1-0763f0a6cae9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Light Attack Button"",
                    ""type"": ""Button"",
                    ""id"": ""9befbf5a-d7f8-48ad-b453-44426054c898"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heavy Attack Button"",
                    ""type"": ""Button"",
                    ""id"": ""42a69e24-fe29-4e3e-8d10-f2e5b4cf5dd7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parrying Attack Button"",
                    ""type"": ""Button"",
                    ""id"": ""8caf0c4b-993f-4c79-b37a-06a1753d282d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Counter Attack Button"",
                    ""type"": ""Button"",
                    ""id"": ""cee334bf-554c-4a4f-85fa-1673e5988c63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll Button"",
                    ""type"": ""Button"",
                    ""id"": ""d5c06e4e-a70a-408f-8264-c84353a0c4d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drink Button"",
                    ""type"": ""Button"",
                    ""id"": ""00c7c070-752d-489c-9344-00fab7a2ae93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Weapon Button"",
                    ""type"": ""Button"",
                    ""id"": ""03ebd43e-e11a-4515-8010-5a78f235aa3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f72ed967-c38e-42e6-bc00-ada809851bda"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Light Attack Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bb68ed1-ce36-472b-920d-f767b563b9a3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heavy Attack Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2890dcdf-379c-4e47-a4c7-9473bf29c094"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc5fbc3c-eef5-4563-84c3-e30d785c2c71"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drink Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12702ef7-6bb0-4340-800a-39918f491b48"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Weapon Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8881be6c-9d2e-4f85-a947-ab1c5f08baa6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parrying Attack Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d1f52a4-2764-414e-9c74-1d2ae29c9fce"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Counter Attack Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""334521bb-0055-49a2-9d9f-232760cce89c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Guard Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d547c511-be0c-4616-a0b7-f296c3f55a47"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15bc33ed-733a-4aee-a162-240f34433090"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Vector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b37f7d88-f7f7-4981-99ab-d5396e114ce9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Vector"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1f381f73-bad7-40c2-ac8e-7f90cb9e4abb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Vector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7b7696d0-e50b-4334-a790-3f2ec82882b6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Vector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""38508e0d-bb8b-46f7-bf2b-251ec89b8796"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Vector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3eff1046-04e3-44a3-ab72-b084aea55a0d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Vector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""a6ca586d-b575-4c2a-9007-f185eefe95d3"",
            ""actions"": [
                {
                    ""name"": ""Option Panel Button"",
                    ""type"": ""Button"",
                    ""id"": ""06ec72f8-d426-454b-9b96-62e177c3ddfd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Panel Button"",
                    ""type"": ""Button"",
                    ""id"": ""20567d7d-dc95-4e66-9be6-a8e9aa9111b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Status Panel Button"",
                    ""type"": ""Button"",
                    ""id"": ""2d327ea0-d2a5-4b93-80f3-74b35b568dc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill Panel Button"",
                    ""type"": ""Button"",
                    ""id"": ""f99e47b0-6edd-455c-9e55-3e07231d74ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quest Panel Button"",
                    ""type"": ""Button"",
                    ""id"": ""244f01c5-5e4a-4e15-856b-4d81ab0ba9be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close Panel Button"",
                    ""type"": ""Button"",
                    ""id"": ""04bf3b78-40a3-41c1-9e05-f8948a7bc587"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Left Button"",
                    ""type"": ""Button"",
                    ""id"": ""e480fcb8-9084-46c5-9fbd-f600c80d6590"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Right Button"",
                    ""type"": ""Button"",
                    ""id"": ""0e478594-c80d-45e4-945c-defd50d81c3a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle Cursor Button"",
                    ""type"": ""Button"",
                    ""id"": ""854c9f2c-de2c-4c14-a151-bc730af6b493"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick Slot 1 Button"",
                    ""type"": ""Button"",
                    ""id"": ""5197ffd0-fffc-40c5-b07e-5afbc53fbf21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick Slot 2 Button"",
                    ""type"": ""Button"",
                    ""id"": ""210601a4-ff0c-469d-bbc5-8a4e0fbe12ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick Slot 3 Button"",
                    ""type"": ""Button"",
                    ""id"": ""60d8e263-1181-4c82-a59c-47c2efe5843a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick Slot 4 Button"",
                    ""type"": ""Button"",
                    ""id"": ""0bd08ee5-4d81-4309-b9ea-dcdfa4b0dc16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esc Button"",
                    ""type"": ""Button"",
                    ""id"": ""011830d3-5f24-4a24-ac59-69760400e86f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1182231e-0ec8-4b39-a003-d2789f0319ea"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Panel Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07817e6b-727d-4045-b9d3-5d7dfc31dc78"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Status Panel Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41c61b82-c744-4957-bf80-a1b7bc586532"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill Panel Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40b3a4b9-3c6f-4bf4-880c-6bc672081fd7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quest Panel Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec7d12df-83b5-42d2-ab4c-1ec024a2627f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close Panel Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""499f2045-ba89-4023-8b64-43230a214a11"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Left Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7accf148-98ec-430b-a521-e38ebac4afc8"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Right Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ac686d7-6b91-41d0-8ceb-1a6ebdce41a1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quick Slot 1 Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf2cd3c7-909b-451a-8cf3-8ce93a77216e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quick Slot 2 Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d60a8df1-b403-486c-bbde-8e08dcd0ff7e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quick Slot 3 Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3eda5e82-8319-4a26-ade5-57662646d460"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quick Slot 4 Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be2ac764-0753-4ae3-bc67-596eefa8fa8d"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option Panel Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6b5c528-9ee2-4612-8c2f-c22a72b6a9e5"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Cursor Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8a10f14-901a-4dc8-adef-860cdc42a7fd"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esc Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interaction"",
            ""id"": ""ae60c7e2-d120-407a-b44d-ded3914242cb"",
            ""actions"": [
                {
                    ""name"": ""Enter Interaction Button"",
                    ""type"": ""Button"",
                    ""id"": ""a5aa352f-f894-4187-bcdd-89ef19cc33f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Update Interaction Button"",
                    ""type"": ""Button"",
                    ""id"": ""47d995f0-ec00-4e98-8404-6dddef4ddcb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit Interaction Button"",
                    ""type"": ""Button"",
                    ""id"": ""20a01607-7565-40c8-8bb7-d4aa97837052"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a8b20b79-02ae-4393-92e7-dadc213d4046"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter Interaction Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e4a3a55-1056-440f-8e8b-beb583a064a6"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit Interaction Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e564d6f-7717-4986-8734-df0230a753d8"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Update Interaction Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_MouseVector = m_Character.FindAction("Mouse Vector", throwIfNotFound: true);
        m_Character_MoveVector = m_Character.FindAction("Move Vector", throwIfNotFound: true);
        m_Character_RunButton = m_Character.FindAction("Run Button", throwIfNotFound: true);
        m_Character_GuardButton = m_Character.FindAction("Guard Button", throwIfNotFound: true);
        m_Character_LightAttackButton = m_Character.FindAction("Light Attack Button", throwIfNotFound: true);
        m_Character_HeavyAttackButton = m_Character.FindAction("Heavy Attack Button", throwIfNotFound: true);
        m_Character_ParryingAttackButton = m_Character.FindAction("Parrying Attack Button", throwIfNotFound: true);
        m_Character_CounterAttackButton = m_Character.FindAction("Counter Attack Button", throwIfNotFound: true);
        m_Character_RollButton = m_Character.FindAction("Roll Button", throwIfNotFound: true);
        m_Character_DrinkButton = m_Character.FindAction("Drink Button", throwIfNotFound: true);
        m_Character_SwitchWeaponButton = m_Character.FindAction("Switch Weapon Button", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_OptionPanelButton = m_UI.FindAction("Option Panel Button", throwIfNotFound: true);
        m_UI_InventoryPanelButton = m_UI.FindAction("Inventory Panel Button", throwIfNotFound: true);
        m_UI_StatusPanelButton = m_UI.FindAction("Status Panel Button", throwIfNotFound: true);
        m_UI_SkillPanelButton = m_UI.FindAction("Skill Panel Button", throwIfNotFound: true);
        m_UI_QuestPanelButton = m_UI.FindAction("Quest Panel Button", throwIfNotFound: true);
        m_UI_ClosePanelButton = m_UI.FindAction("Close Panel Button", throwIfNotFound: true);
        m_UI_MouseLeftButton = m_UI.FindAction("Mouse Left Button", throwIfNotFound: true);
        m_UI_MouseRightButton = m_UI.FindAction("Mouse Right Button", throwIfNotFound: true);
        m_UI_ToggleCursorButton = m_UI.FindAction("Toggle Cursor Button", throwIfNotFound: true);
        m_UI_QuickSlot1Button = m_UI.FindAction("Quick Slot 1 Button", throwIfNotFound: true);
        m_UI_QuickSlot2Button = m_UI.FindAction("Quick Slot 2 Button", throwIfNotFound: true);
        m_UI_QuickSlot3Button = m_UI.FindAction("Quick Slot 3 Button", throwIfNotFound: true);
        m_UI_QuickSlot4Button = m_UI.FindAction("Quick Slot 4 Button", throwIfNotFound: true);
        m_UI_EscButton = m_UI.FindAction("Esc Button", throwIfNotFound: true);
        // Interaction
        m_Interaction = asset.FindActionMap("Interaction", throwIfNotFound: true);
        m_Interaction_EnterInteractionButton = m_Interaction.FindAction("Enter Interaction Button", throwIfNotFound: true);
        m_Interaction_UpdateInteractionButton = m_Interaction.FindAction("Update Interaction Button", throwIfNotFound: true);
        m_Interaction_ExitInteractionButton = m_Interaction.FindAction("Exit Interaction Button", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private List<ICharacterActions> m_CharacterActionsCallbackInterfaces = new List<ICharacterActions>();
    private readonly InputAction m_Character_MouseVector;
    private readonly InputAction m_Character_MoveVector;
    private readonly InputAction m_Character_RunButton;
    private readonly InputAction m_Character_GuardButton;
    private readonly InputAction m_Character_LightAttackButton;
    private readonly InputAction m_Character_HeavyAttackButton;
    private readonly InputAction m_Character_ParryingAttackButton;
    private readonly InputAction m_Character_CounterAttackButton;
    private readonly InputAction m_Character_RollButton;
    private readonly InputAction m_Character_DrinkButton;
    private readonly InputAction m_Character_SwitchWeaponButton;
    public struct CharacterActions
    {
        private @PlayerInputs m_Wrapper;
        public CharacterActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseVector => m_Wrapper.m_Character_MouseVector;
        public InputAction @MoveVector => m_Wrapper.m_Character_MoveVector;
        public InputAction @RunButton => m_Wrapper.m_Character_RunButton;
        public InputAction @GuardButton => m_Wrapper.m_Character_GuardButton;
        public InputAction @LightAttackButton => m_Wrapper.m_Character_LightAttackButton;
        public InputAction @HeavyAttackButton => m_Wrapper.m_Character_HeavyAttackButton;
        public InputAction @ParryingAttackButton => m_Wrapper.m_Character_ParryingAttackButton;
        public InputAction @CounterAttackButton => m_Wrapper.m_Character_CounterAttackButton;
        public InputAction @RollButton => m_Wrapper.m_Character_RollButton;
        public InputAction @DrinkButton => m_Wrapper.m_Character_DrinkButton;
        public InputAction @SwitchWeaponButton => m_Wrapper.m_Character_SwitchWeaponButton;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Add(instance);
            @MouseVector.started += instance.OnMouseVector;
            @MouseVector.performed += instance.OnMouseVector;
            @MouseVector.canceled += instance.OnMouseVector;
            @MoveVector.started += instance.OnMoveVector;
            @MoveVector.performed += instance.OnMoveVector;
            @MoveVector.canceled += instance.OnMoveVector;
            @RunButton.started += instance.OnRunButton;
            @RunButton.performed += instance.OnRunButton;
            @RunButton.canceled += instance.OnRunButton;
            @GuardButton.started += instance.OnGuardButton;
            @GuardButton.performed += instance.OnGuardButton;
            @GuardButton.canceled += instance.OnGuardButton;
            @LightAttackButton.started += instance.OnLightAttackButton;
            @LightAttackButton.performed += instance.OnLightAttackButton;
            @LightAttackButton.canceled += instance.OnLightAttackButton;
            @HeavyAttackButton.started += instance.OnHeavyAttackButton;
            @HeavyAttackButton.performed += instance.OnHeavyAttackButton;
            @HeavyAttackButton.canceled += instance.OnHeavyAttackButton;
            @ParryingAttackButton.started += instance.OnParryingAttackButton;
            @ParryingAttackButton.performed += instance.OnParryingAttackButton;
            @ParryingAttackButton.canceled += instance.OnParryingAttackButton;
            @CounterAttackButton.started += instance.OnCounterAttackButton;
            @CounterAttackButton.performed += instance.OnCounterAttackButton;
            @CounterAttackButton.canceled += instance.OnCounterAttackButton;
            @RollButton.started += instance.OnRollButton;
            @RollButton.performed += instance.OnRollButton;
            @RollButton.canceled += instance.OnRollButton;
            @DrinkButton.started += instance.OnDrinkButton;
            @DrinkButton.performed += instance.OnDrinkButton;
            @DrinkButton.canceled += instance.OnDrinkButton;
            @SwitchWeaponButton.started += instance.OnSwitchWeaponButton;
            @SwitchWeaponButton.performed += instance.OnSwitchWeaponButton;
            @SwitchWeaponButton.canceled += instance.OnSwitchWeaponButton;
        }

        private void UnregisterCallbacks(ICharacterActions instance)
        {
            @MouseVector.started -= instance.OnMouseVector;
            @MouseVector.performed -= instance.OnMouseVector;
            @MouseVector.canceled -= instance.OnMouseVector;
            @MoveVector.started -= instance.OnMoveVector;
            @MoveVector.performed -= instance.OnMoveVector;
            @MoveVector.canceled -= instance.OnMoveVector;
            @RunButton.started -= instance.OnRunButton;
            @RunButton.performed -= instance.OnRunButton;
            @RunButton.canceled -= instance.OnRunButton;
            @GuardButton.started -= instance.OnGuardButton;
            @GuardButton.performed -= instance.OnGuardButton;
            @GuardButton.canceled -= instance.OnGuardButton;
            @LightAttackButton.started -= instance.OnLightAttackButton;
            @LightAttackButton.performed -= instance.OnLightAttackButton;
            @LightAttackButton.canceled -= instance.OnLightAttackButton;
            @HeavyAttackButton.started -= instance.OnHeavyAttackButton;
            @HeavyAttackButton.performed -= instance.OnHeavyAttackButton;
            @HeavyAttackButton.canceled -= instance.OnHeavyAttackButton;
            @ParryingAttackButton.started -= instance.OnParryingAttackButton;
            @ParryingAttackButton.performed -= instance.OnParryingAttackButton;
            @ParryingAttackButton.canceled -= instance.OnParryingAttackButton;
            @CounterAttackButton.started -= instance.OnCounterAttackButton;
            @CounterAttackButton.performed -= instance.OnCounterAttackButton;
            @CounterAttackButton.canceled -= instance.OnCounterAttackButton;
            @RollButton.started -= instance.OnRollButton;
            @RollButton.performed -= instance.OnRollButton;
            @RollButton.canceled -= instance.OnRollButton;
            @DrinkButton.started -= instance.OnDrinkButton;
            @DrinkButton.performed -= instance.OnDrinkButton;
            @DrinkButton.canceled -= instance.OnDrinkButton;
            @SwitchWeaponButton.started -= instance.OnSwitchWeaponButton;
            @SwitchWeaponButton.performed -= instance.OnSwitchWeaponButton;
            @SwitchWeaponButton.canceled -= instance.OnSwitchWeaponButton;
        }

        public void RemoveCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterActions @Character => new CharacterActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_OptionPanelButton;
    private readonly InputAction m_UI_InventoryPanelButton;
    private readonly InputAction m_UI_StatusPanelButton;
    private readonly InputAction m_UI_SkillPanelButton;
    private readonly InputAction m_UI_QuestPanelButton;
    private readonly InputAction m_UI_ClosePanelButton;
    private readonly InputAction m_UI_MouseLeftButton;
    private readonly InputAction m_UI_MouseRightButton;
    private readonly InputAction m_UI_ToggleCursorButton;
    private readonly InputAction m_UI_QuickSlot1Button;
    private readonly InputAction m_UI_QuickSlot2Button;
    private readonly InputAction m_UI_QuickSlot3Button;
    private readonly InputAction m_UI_QuickSlot4Button;
    private readonly InputAction m_UI_EscButton;
    public struct UIActions
    {
        private @PlayerInputs m_Wrapper;
        public UIActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @OptionPanelButton => m_Wrapper.m_UI_OptionPanelButton;
        public InputAction @InventoryPanelButton => m_Wrapper.m_UI_InventoryPanelButton;
        public InputAction @StatusPanelButton => m_Wrapper.m_UI_StatusPanelButton;
        public InputAction @SkillPanelButton => m_Wrapper.m_UI_SkillPanelButton;
        public InputAction @QuestPanelButton => m_Wrapper.m_UI_QuestPanelButton;
        public InputAction @ClosePanelButton => m_Wrapper.m_UI_ClosePanelButton;
        public InputAction @MouseLeftButton => m_Wrapper.m_UI_MouseLeftButton;
        public InputAction @MouseRightButton => m_Wrapper.m_UI_MouseRightButton;
        public InputAction @ToggleCursorButton => m_Wrapper.m_UI_ToggleCursorButton;
        public InputAction @QuickSlot1Button => m_Wrapper.m_UI_QuickSlot1Button;
        public InputAction @QuickSlot2Button => m_Wrapper.m_UI_QuickSlot2Button;
        public InputAction @QuickSlot3Button => m_Wrapper.m_UI_QuickSlot3Button;
        public InputAction @QuickSlot4Button => m_Wrapper.m_UI_QuickSlot4Button;
        public InputAction @EscButton => m_Wrapper.m_UI_EscButton;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @OptionPanelButton.started += instance.OnOptionPanelButton;
            @OptionPanelButton.performed += instance.OnOptionPanelButton;
            @OptionPanelButton.canceled += instance.OnOptionPanelButton;
            @InventoryPanelButton.started += instance.OnInventoryPanelButton;
            @InventoryPanelButton.performed += instance.OnInventoryPanelButton;
            @InventoryPanelButton.canceled += instance.OnInventoryPanelButton;
            @StatusPanelButton.started += instance.OnStatusPanelButton;
            @StatusPanelButton.performed += instance.OnStatusPanelButton;
            @StatusPanelButton.canceled += instance.OnStatusPanelButton;
            @SkillPanelButton.started += instance.OnSkillPanelButton;
            @SkillPanelButton.performed += instance.OnSkillPanelButton;
            @SkillPanelButton.canceled += instance.OnSkillPanelButton;
            @QuestPanelButton.started += instance.OnQuestPanelButton;
            @QuestPanelButton.performed += instance.OnQuestPanelButton;
            @QuestPanelButton.canceled += instance.OnQuestPanelButton;
            @ClosePanelButton.started += instance.OnClosePanelButton;
            @ClosePanelButton.performed += instance.OnClosePanelButton;
            @ClosePanelButton.canceled += instance.OnClosePanelButton;
            @MouseLeftButton.started += instance.OnMouseLeftButton;
            @MouseLeftButton.performed += instance.OnMouseLeftButton;
            @MouseLeftButton.canceled += instance.OnMouseLeftButton;
            @MouseRightButton.started += instance.OnMouseRightButton;
            @MouseRightButton.performed += instance.OnMouseRightButton;
            @MouseRightButton.canceled += instance.OnMouseRightButton;
            @ToggleCursorButton.started += instance.OnToggleCursorButton;
            @ToggleCursorButton.performed += instance.OnToggleCursorButton;
            @ToggleCursorButton.canceled += instance.OnToggleCursorButton;
            @QuickSlot1Button.started += instance.OnQuickSlot1Button;
            @QuickSlot1Button.performed += instance.OnQuickSlot1Button;
            @QuickSlot1Button.canceled += instance.OnQuickSlot1Button;
            @QuickSlot2Button.started += instance.OnQuickSlot2Button;
            @QuickSlot2Button.performed += instance.OnQuickSlot2Button;
            @QuickSlot2Button.canceled += instance.OnQuickSlot2Button;
            @QuickSlot3Button.started += instance.OnQuickSlot3Button;
            @QuickSlot3Button.performed += instance.OnQuickSlot3Button;
            @QuickSlot3Button.canceled += instance.OnQuickSlot3Button;
            @QuickSlot4Button.started += instance.OnQuickSlot4Button;
            @QuickSlot4Button.performed += instance.OnQuickSlot4Button;
            @QuickSlot4Button.canceled += instance.OnQuickSlot4Button;
            @EscButton.started += instance.OnEscButton;
            @EscButton.performed += instance.OnEscButton;
            @EscButton.canceled += instance.OnEscButton;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @OptionPanelButton.started -= instance.OnOptionPanelButton;
            @OptionPanelButton.performed -= instance.OnOptionPanelButton;
            @OptionPanelButton.canceled -= instance.OnOptionPanelButton;
            @InventoryPanelButton.started -= instance.OnInventoryPanelButton;
            @InventoryPanelButton.performed -= instance.OnInventoryPanelButton;
            @InventoryPanelButton.canceled -= instance.OnInventoryPanelButton;
            @StatusPanelButton.started -= instance.OnStatusPanelButton;
            @StatusPanelButton.performed -= instance.OnStatusPanelButton;
            @StatusPanelButton.canceled -= instance.OnStatusPanelButton;
            @SkillPanelButton.started -= instance.OnSkillPanelButton;
            @SkillPanelButton.performed -= instance.OnSkillPanelButton;
            @SkillPanelButton.canceled -= instance.OnSkillPanelButton;
            @QuestPanelButton.started -= instance.OnQuestPanelButton;
            @QuestPanelButton.performed -= instance.OnQuestPanelButton;
            @QuestPanelButton.canceled -= instance.OnQuestPanelButton;
            @ClosePanelButton.started -= instance.OnClosePanelButton;
            @ClosePanelButton.performed -= instance.OnClosePanelButton;
            @ClosePanelButton.canceled -= instance.OnClosePanelButton;
            @MouseLeftButton.started -= instance.OnMouseLeftButton;
            @MouseLeftButton.performed -= instance.OnMouseLeftButton;
            @MouseLeftButton.canceled -= instance.OnMouseLeftButton;
            @MouseRightButton.started -= instance.OnMouseRightButton;
            @MouseRightButton.performed -= instance.OnMouseRightButton;
            @MouseRightButton.canceled -= instance.OnMouseRightButton;
            @ToggleCursorButton.started -= instance.OnToggleCursorButton;
            @ToggleCursorButton.performed -= instance.OnToggleCursorButton;
            @ToggleCursorButton.canceled -= instance.OnToggleCursorButton;
            @QuickSlot1Button.started -= instance.OnQuickSlot1Button;
            @QuickSlot1Button.performed -= instance.OnQuickSlot1Button;
            @QuickSlot1Button.canceled -= instance.OnQuickSlot1Button;
            @QuickSlot2Button.started -= instance.OnQuickSlot2Button;
            @QuickSlot2Button.performed -= instance.OnQuickSlot2Button;
            @QuickSlot2Button.canceled -= instance.OnQuickSlot2Button;
            @QuickSlot3Button.started -= instance.OnQuickSlot3Button;
            @QuickSlot3Button.performed -= instance.OnQuickSlot3Button;
            @QuickSlot3Button.canceled -= instance.OnQuickSlot3Button;
            @QuickSlot4Button.started -= instance.OnQuickSlot4Button;
            @QuickSlot4Button.performed -= instance.OnQuickSlot4Button;
            @QuickSlot4Button.canceled -= instance.OnQuickSlot4Button;
            @EscButton.started -= instance.OnEscButton;
            @EscButton.performed -= instance.OnEscButton;
            @EscButton.canceled -= instance.OnEscButton;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // Interaction
    private readonly InputActionMap m_Interaction;
    private List<IInteractionActions> m_InteractionActionsCallbackInterfaces = new List<IInteractionActions>();
    private readonly InputAction m_Interaction_EnterInteractionButton;
    private readonly InputAction m_Interaction_UpdateInteractionButton;
    private readonly InputAction m_Interaction_ExitInteractionButton;
    public struct InteractionActions
    {
        private @PlayerInputs m_Wrapper;
        public InteractionActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnterInteractionButton => m_Wrapper.m_Interaction_EnterInteractionButton;
        public InputAction @UpdateInteractionButton => m_Wrapper.m_Interaction_UpdateInteractionButton;
        public InputAction @ExitInteractionButton => m_Wrapper.m_Interaction_ExitInteractionButton;
        public InputActionMap Get() { return m_Wrapper.m_Interaction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractionActions set) { return set.Get(); }
        public void AddCallbacks(IInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_InteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InteractionActionsCallbackInterfaces.Add(instance);
            @EnterInteractionButton.started += instance.OnEnterInteractionButton;
            @EnterInteractionButton.performed += instance.OnEnterInteractionButton;
            @EnterInteractionButton.canceled += instance.OnEnterInteractionButton;
            @UpdateInteractionButton.started += instance.OnUpdateInteractionButton;
            @UpdateInteractionButton.performed += instance.OnUpdateInteractionButton;
            @UpdateInteractionButton.canceled += instance.OnUpdateInteractionButton;
            @ExitInteractionButton.started += instance.OnExitInteractionButton;
            @ExitInteractionButton.performed += instance.OnExitInteractionButton;
            @ExitInteractionButton.canceled += instance.OnExitInteractionButton;
        }

        private void UnregisterCallbacks(IInteractionActions instance)
        {
            @EnterInteractionButton.started -= instance.OnEnterInteractionButton;
            @EnterInteractionButton.performed -= instance.OnEnterInteractionButton;
            @EnterInteractionButton.canceled -= instance.OnEnterInteractionButton;
            @UpdateInteractionButton.started -= instance.OnUpdateInteractionButton;
            @UpdateInteractionButton.performed -= instance.OnUpdateInteractionButton;
            @UpdateInteractionButton.canceled -= instance.OnUpdateInteractionButton;
            @ExitInteractionButton.started -= instance.OnExitInteractionButton;
            @ExitInteractionButton.performed -= instance.OnExitInteractionButton;
            @ExitInteractionButton.canceled -= instance.OnExitInteractionButton;
        }

        public void RemoveCallbacks(IInteractionActions instance)
        {
            if (m_Wrapper.m_InteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_InteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InteractionActions @Interaction => new InteractionActions(this);
    public interface ICharacterActions
    {
        void OnMouseVector(InputAction.CallbackContext context);
        void OnMoveVector(InputAction.CallbackContext context);
        void OnRunButton(InputAction.CallbackContext context);
        void OnGuardButton(InputAction.CallbackContext context);
        void OnLightAttackButton(InputAction.CallbackContext context);
        void OnHeavyAttackButton(InputAction.CallbackContext context);
        void OnParryingAttackButton(InputAction.CallbackContext context);
        void OnCounterAttackButton(InputAction.CallbackContext context);
        void OnRollButton(InputAction.CallbackContext context);
        void OnDrinkButton(InputAction.CallbackContext context);
        void OnSwitchWeaponButton(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnOptionPanelButton(InputAction.CallbackContext context);
        void OnInventoryPanelButton(InputAction.CallbackContext context);
        void OnStatusPanelButton(InputAction.CallbackContext context);
        void OnSkillPanelButton(InputAction.CallbackContext context);
        void OnQuestPanelButton(InputAction.CallbackContext context);
        void OnClosePanelButton(InputAction.CallbackContext context);
        void OnMouseLeftButton(InputAction.CallbackContext context);
        void OnMouseRightButton(InputAction.CallbackContext context);
        void OnToggleCursorButton(InputAction.CallbackContext context);
        void OnQuickSlot1Button(InputAction.CallbackContext context);
        void OnQuickSlot2Button(InputAction.CallbackContext context);
        void OnQuickSlot3Button(InputAction.CallbackContext context);
        void OnQuickSlot4Button(InputAction.CallbackContext context);
        void OnEscButton(InputAction.CallbackContext context);
    }
    public interface IInteractionActions
    {
        void OnEnterInteractionButton(InputAction.CallbackContext context);
        void OnUpdateInteractionButton(InputAction.CallbackContext context);
        void OnExitInteractionButton(InputAction.CallbackContext context);
    }
}
